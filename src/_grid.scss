*, ::after, ::before {
    box-sizing: border-box;
}

.container {
  max-width: $container-max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: map-get($spacers, 2);
  padding-right: map-get($spacers, 2);
}

.container-full {
  width: 100%;
  padding-left: map-get($spacers, 2);
  padding-right: map-get($spacers, 2);
}

.row {
  position: relative;
  display: block;
  display: flex;
  flex-wrap: wrap;
  margin-left: -$gutter-width / 2;
  margin-right: -$gutter-width / 2;

  &::after {
    content: "";
    float: none;
    clear: both;
    display: table;
  }
}

[class^="col-"] {
  @include make-col(12, 12);
}

@for $i from 1 through $grid-columns {
    .col-#{$i} {
      @include make-col($i, $grid-columns);
    }
    .offset-#{$i} {
      @include make-offset($i, $grid-columns);
    }
}

@each $name, $size in $breakpoints {
  @media only screen and (min-width: $size) {

      @for $i from 1 through $grid-columns {
        .col-#{$name}-#{$i} {
          @include make-col($i, $grid-columns);
        }
        .offset-#{$name}-#{$i} {
          @include make-offset($i, $grid-columns);
        }
    }
  }
}
